{"version":3,"file":"static/js/50.627fdf21.chunk.js","mappings":"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","sources":["components/ErrorFormText/ErrorFormTextStyle.styled.ts","components/DeleteContactButton/DeleteContactButton.tsx","components/EditContactButton/EditContactButton.tsx","components/FriendsList/ContactsItemStyle.styled.ts","components/FriendsList/ContactItem.tsx","components/FriendsList/ContactsListStyle.styled.ts","components/EditContactModal/EditContactModal.styled.ts","components/EditContactModal/EditContactFormStyle.styled.ts","components/EditContactModal/EditContactForm.tsx","components/EditContactModal/EditContactModal.tsx","components/FriendsList/MainSpinner.tsx","components/FriendsList/ContactsContainer.styled.ts","components/FriendsList/ContactsList.tsx","components/SearchInput/SearchinputStyle.styled.ts","components/SearchInput/SearchInput.tsx","components/AddContactForm/FormStyle.styled.ts","components/AddContactForm/AddContactForm.tsx","pages/pageStyles/ContactsPageStyle.styled.ts","pages/ContactsPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n","import { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { PiSpinnerGap } from \"react-icons/pi\";\nimport { useState } from \"react\";\nimport { useDeleteContactMutation } from \"redux/baseApi\";\nimport { toastSuccess, toastError } from \"toastNotification/toastNotification\";\n\ntype Props = {\n  userId: string;\n};\n\nconst DeleteContactButton = ({ userId }: Props) => {\n  const [isCurrentButton, setIsCurrentButton] = useState<boolean>(false);\n  const [deleteContact, { isLoading: Deleting }] = useDeleteContactMutation();\n\n  const handleDelete = async () => {\n    setIsCurrentButton(true);\n\n    try {\n      await deleteContact(userId).unwrap();\n      toastSuccess(\"Contacts has been deleted from your book\");\n    } catch {\n      toastError(\n        \"Oops... Something went wrong =(. Please, reload page and try again\"\n      );\n    }\n\n    setIsCurrentButton(false);\n  };\n\n  return (\n    <button\n      disabled={Deleting}\n      className=\"button-item delete\"\n      onClick={handleDelete}\n    >\n      {Deleting && isCurrentButton ? (\n        <PiSpinnerGap className=\"spinner\" size={24} />\n      ) : (\n        <RiDeleteBin6Line size={24} />\n      )}\n    </button>\n  );\n};\n\nexport default DeleteContactButton;\n","import { useCustomContext } from \"context/userEditContext\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport { Contact } from \"types\";\n\nconst EditContactButton = ({ id, name, number }: Contact) => {\n  const { setId, setIsShowModal, setName, setNumber } = useCustomContext();\n\n  const handleEditContact = () => {\n    setId(id);\n    setName(name);\n    setNumber(number);\n    setIsShowModal(true);\n  };\n\n  return (\n    <button\n      className=\"button-item edit\"\n      onClick={handleEditContact}\n      type=\"button\"\n    >\n      <FiEdit2 size={20} />\n    </button>\n  );\n};\n\nexport default EditContactButton;\n","import styled from \"styled-components\";\n\nexport const ContactItemStyle = styled.li`\n  border: 1px solid black;\n  border-radius: 12px;\n  display: flex;\n  padding: 8px 12px;\n  justify-content: space-between;\n  background-color: rgba(192, 192, 192, 0.6);\n\n  .buttons-list {\n    display: flex;\n    column-gap: 16px;\n  }\n\n  .button-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n  }\n  .phone {\n    background-color: #00ff00;\n    color: white;\n  }\n\n  .phone,\n  .edit,\n  .delete {\n    transition: 250ms linear;\n  }\n\n  .phone:hover,\n  .phone:focus,\n  .edit:hover,\n  .edit:focus,\n  .delete:hover,\n  .delete:focus {\n    scale: 1.3;\n  }\n\n  .edit {\n    color: blue;\n    border: none;\n    background-color: rgba(209, 188, 138, 1);\n  }\n  .delete {\n    background-color: red;\n    color: white;\n    border: none;\n  }\n\n  .name {\n    color: tomato;\n    text-transform: capitalize;\n  }\n\n  .number {\n    color: blue;\n  }\n\n  .user-container {\n    text-align: start;\n  }\n`;\n","import DeleteContactButton from \"components/DeleteContactButton/DeleteContactButton\";\nimport EditContactButton from \"components/EditContactButton/EditContactButton\";\nimport { ContactItemStyle } from \"./ContactsItemStyle.styled\";\nimport { IoMdCall } from \"react-icons/io\";\nimport { Contact } from \"types\";\n\nconst ContactItem = ({ name, number, id }: Contact) => {\n  return (\n    <ContactItemStyle id={id}>\n      <div className=\"user-container\">\n        <p className=\"name\">{name}</p>\n        <p className=\"number\">{number}</p>\n      </div>\n\n      <ul className=\"buttons-list\">\n        <li>\n          <a\n            className=\"button-item phone\"\n            href={`tel:${number.replace(\"-\", \"\").replace(\" \", \"\")}`}\n          >\n            <IoMdCall size={20} />\n          </a>\n        </li>\n        <li>\n          <EditContactButton id={id} name={name} number={number} />\n        </li>\n        <li>\n          <DeleteContactButton userId={id} />\n        </li>\n      </ul>\n    </ContactItemStyle>\n  );\n};\n\nexport default ContactItem;\n","import styled from \"styled-components\";\n\nconst ContactsListStyled = styled.ul`\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  margin-top: 8px;\n  background-color: rgba(244, 164, 96, 0.3);\n  border: 1px solid black;\n  padding: 20px 10px;\n  border-radius: 20px;\n`;\n\nexport default ContactsListStyled;\n","import styled from \"styled-components\";\n\nconst EditModalStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: 250ms linear;\n\n  .modal {\n    position: relative;\n    height: 500px;\n    width: 80%;\n    max-height: 95%;\n    position: absolute;\n    background-color: rgba(255, 248, 220, 1);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 20px;\n    padding: 50px 20px;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    .modal {\n      width: 500px;\n    }\n  }\n  .first {\n    color: tomato;\n  }\n\n  .user-info-container {\n    text-align: start;\n    font-size: 20px;\n    margin-bottom: 20px;\n    word-wrap: break-word;\n    max-width: 500px;\n  }\n\n  .user-info-item {\n    color: tomato;\n  }\n\n  .user-info-current {\n    color: blue;\n  }\n\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  .close-btn {\n    position: absolute;\n    right: 30px;\n    top: 18px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: transparent;\n    color: tomato;\n    transition: 250ms linear;\n  }\n\n  .close-btn:hover,\n  .close-btn:focus {\n    color: blue;\n  }\n`;\n\nexport default EditModalStyled;\n","import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const EditContactFormStyle = styled(Form)`\n  width: 80%;\n  background-color: rgba(244, 164, 96, 0.3);\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n  padding: 40px 10px;\n  border-radius: 20px;\n  margin-top: 40px;\n  border: 1px solid black;\n  .label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: blue;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: blue;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: tomato;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n`;\n","import { useCustomContext } from \"context/userEditContext\";\nimport { EditContactFormStyle } from \"./EditContactFormStyle.styled\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport { PiSpinner } from \"react-icons/pi\";\nimport { useEditContactMutation, useFetchContactsQuery } from \"redux/baseApi\";\nimport { toastSuccess, toastError } from \"toastNotification/toastNotification\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { ErrorText } from \"components/ErrorFormText/ErrorFormTextStyle.styled\";\n\ntype InitialValuesType = {\n  name: string;\n  number: string;\n};\n\nconst initialValues: InitialValuesType = {\n  name: \"\",\n  number: \"\",\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, \"Field name must be 3 symbols minimum\")\n    .max(16, \"Field name must be 16 symbols maximum\"),\n\n  number: yup\n    .string()\n    .min(5, \"Field number must be 5 symbols minimum\")\n    .max(16, \"Field number must be 16 symbols minimum\"),\n});\n\nconst EditContactForm = () => {\n  const { name, number, id, setIsShowModal } = useCustomContext();\n  const { data: contacts } = useFetchContactsQuery();\n  const [editContact, { isLoading: editing }] = useEditContactMutation();\n\n  const handleSubmit = async ({ name: editName, number: editNumber }) => {\n    if (!editName && !editNumber) {\n      toastError(\"Please, enter name or number\");\n      return;\n    }\n\n    if (\n      contacts.some(\n        ({ name, number }) => name === editName || number === editNumber\n      )\n    ) {\n      toastError(\"Sorry, you already have this contact in your book\");\n      return;\n    }\n\n    const sendingName: string = editName ? editName : name;\n    const sendingNumber: string = editNumber ? editNumber : number;\n\n    try {\n      await editContact({\n        id,\n        name: sendingName,\n        number: sendingNumber,\n      }).unwrap();\n\n      toastSuccess(\"Successful!!! Your contact has been edited\");\n      setIsShowModal(false);\n    } catch {\n      toastError(\n        \"Oops... Something went wrong =(. Please, reload page and try again\"\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <EditContactFormStyle autoComplete=\"off\">\n        <div className=\"label-container\">\n          <Field\n            placeholder=\"Name\"\n            id=\"edit-name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            name=\"name\"\n            type=\"text\"\n          />\n          <label htmlFor=\"edit-name\">Name </label>\n        </div>\n        <div className=\"label-container\">\n          <Field\n            placeholder=\"Number\"\n            id=\"edit-number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            name=\"number\"\n            type=\"tel\"\n          />\n          <label htmlFor=\"edit-number\">Phone</label>\n        </div>\n\n        <button disabled={false} type=\"submit\">\n          {editing ? (\n            <PiSpinner className=\"spinner\" size={16} />\n          ) : (\n            <FiEdit2 size={16} />\n          )}\n          Edit\n        </button>\n        <ErrorMessage\n          name=\"name\"\n          component=\"div\"\n          render={message => <ErrorText>{message}</ErrorText>}\n        />\n        <ErrorMessage\n          name=\"number\"\n          component=\"div\"\n          render={message => <ErrorText>{message}</ErrorText>}\n        />\n      </EditContactFormStyle>\n    </Formik>\n  );\n};\n\nexport default EditContactForm;\n","import { createPortal } from 'react-dom';\nimport { useCustomContext } from 'context/userEditContext';\nimport EditModalStyled from './EditContactModal.styled';\nimport EditContactForm from './EditContactForm';\nimport { useEffect } from 'react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nconst modalRoot = document.getElementById(\n  \"contact-edit-modal-root\"\n) as HTMLDivElement;\n\nconst EditContactModal = () => {\n  const { name, number, isShowModal, setIsShowModal } = useCustomContext();\n\n  useEffect(() => {\n    function onEsc(e: KeyboardEvent) {\n      if (e.code !== \"Escape\") {\n        return;\n      }\n      setIsShowModal(false);\n    }\n    document.body.style.overflow = 'hidden';\n    const paddingOffSet = window.innerWidth - document.body.offsetWidth + 'px';\n\n    document.body.style.paddingRight = paddingOffSet;\n    window.addEventListener('keydown', onEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onEsc);\n      document.body.style.overflow = \"auto\";\n      document.body.style.paddingRight = \"0px\";\n    };\n  }, [isShowModal, setIsShowModal]);\n\n  const onBackdrop = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    setIsShowModal(false);\n  };\n\n  return createPortal(\n    <EditModalStyled onClick={onBackdrop}>\n      <div className=\"modal\">\n        <button\n          type=\"button\"\n          className=\"close-btn\"\n          onClick={() => setIsShowModal(false)}\n        >\n          <AiOutlineCloseCircle size={24} />\n        </button>\n        <h2>\n          <span className=\"first\">Edit </span> user\n        </h2>\n        <ul className=\"user-info-container\">\n          <li>\n            <p className=\"user-info-item\">\n              Current name: <span className=\"user-info-current\">{name}</span>\n            </p>\n          </li>\n          <li>\n            <p className=\"user-info-item\">\n              Current number:{' '}\n              <span className=\"user-info-current\">{number}</span>\n            </p>\n          </li>\n        </ul>\n\n        <EditContactForm />\n      </div>\n    </EditModalStyled>,\n    modalRoot\n  );\n};\n\nexport default EditContactModal;\n","const MainSpinner = () => {\n  return (\n    <div id=\"fountainG\">\n      <div id=\"fountainG_1\" className=\"fountainG\"></div>\n      <div id=\"fountainG_2\" className=\"fountainG\"></div>\n      <div id=\"fountainG_3\" className=\"fountainG\"></div>\n      <div id=\"fountainG_4\" className=\"fountainG\"></div>\n      <div id=\"fountainG_5\" className=\"fountainG\"></div>\n      <div id=\"fountainG_6\" className=\"fountainG\"></div>\n      <div id=\"fountainG_7\" className=\"fountainG\"></div>\n      <div id=\"fountainG_8\" className=\"fountainG\"></div>\n    </div>\n  );\n};\n\nexport default MainSpinner;\n","import styled from \"styled-components\";\n\nexport const ContactsContainerStyle = styled.div`\n  .error {\n    color: red;\n  }\n\n  .notification {\n    color: tomato;\n    margin-top: 20px;\n  }\n  #fountainG {\n    position: relative;\n    width: 234px;\n    height: 28px;\n    margin: auto;\n    top: 20px;\n  }\n\n  .fountainG {\n    position: absolute;\n    top: 0;\n    background-color: transparent;\n    width: 28px;\n    height: 28px;\n    animation-name: bounce_fountainG;\n    -o-animation-name: bounce_fountainG;\n    -ms-animation-name: bounce_fountainG;\n    -webkit-animation-name: bounce_fountainG;\n    -moz-animation-name: bounce_fountainG;\n    animation-duration: 0.775s;\n    -o-animation-duration: 0.775s;\n    -ms-animation-duration: 0.775s;\n    -webkit-animation-duration: 0.775s;\n    -moz-animation-duration: 0.775s;\n    animation-iteration-count: infinite;\n    -o-animation-iteration-count: infinite;\n    -ms-animation-iteration-count: infinite;\n    -webkit-animation-iteration-count: infinite;\n    -moz-animation-iteration-count: infinite;\n    animation-direction: normal;\n    -o-animation-direction: normal;\n    -ms-animation-direction: normal;\n    -webkit-animation-direction: normal;\n    -moz-animation-direction: normal;\n    transform: scale(0.3);\n    -o-transform: scale(0.3);\n    -ms-transform: scale(0.3);\n    -webkit-transform: scale(0.3);\n    -moz-transform: scale(0.3);\n    border-radius: 19px;\n    -o-border-radius: 19px;\n    -ms-border-radius: 19px;\n    -webkit-border-radius: 19px;\n    -moz-border-radius: 19px;\n  }\n\n  #fountainG_1 {\n    left: 0;\n    animation-delay: 0.316s;\n    -o-animation-delay: 0.316s;\n    -ms-animation-delay: 0.316s;\n    -webkit-animation-delay: 0.316s;\n    -moz-animation-delay: 0.316s;\n  }\n\n  #fountainG_2 {\n    left: 29px;\n    animation-delay: 0.3925s;\n    -o-animation-delay: 0.3925s;\n    -ms-animation-delay: 0.3925s;\n    -webkit-animation-delay: 0.3925s;\n    -moz-animation-delay: 0.3925s;\n  }\n\n  #fountainG_3 {\n    left: 58px;\n    animation-delay: 0.469s;\n    -o-animation-delay: 0.469s;\n    -ms-animation-delay: 0.469s;\n    -webkit-animation-delay: 0.469s;\n    -moz-animation-delay: 0.469s;\n  }\n\n  #fountainG_4 {\n    left: 88px;\n    animation-delay: 0.5455s;\n    -o-animation-delay: 0.5455s;\n    -ms-animation-delay: 0.5455s;\n    -webkit-animation-delay: 0.5455s;\n    -moz-animation-delay: 0.5455s;\n  }\n\n  #fountainG_5 {\n    left: 117px;\n    animation-delay: 0.622s;\n    -o-animation-delay: 0.622s;\n    -ms-animation-delay: 0.622s;\n    -webkit-animation-delay: 0.622s;\n    -moz-animation-delay: 0.622s;\n  }\n\n  #fountainG_6 {\n    left: 146px;\n    animation-delay: 0.6985s;\n    -o-animation-delay: 0.6985s;\n    -ms-animation-delay: 0.6985s;\n    -webkit-animation-delay: 0.6985s;\n    -moz-animation-delay: 0.6985s;\n  }\n\n  #fountainG_7 {\n    left: 175px;\n    animation-delay: 0.775s;\n    -o-animation-delay: 0.775s;\n    -ms-animation-delay: 0.775s;\n    -webkit-animation-delay: 0.775s;\n    -moz-animation-delay: 0.775s;\n  }\n\n  #fountainG_8 {\n    left: 205px;\n    animation-delay: 0.8615s;\n    -o-animation-delay: 0.8615s;\n    -ms-animation-delay: 0.8615s;\n    -webkit-animation-delay: 0.8615s;\n    -moz-animation-delay: 0.8615s;\n  }\n\n  @keyframes bounce_fountainG {\n    0% {\n      transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-o-keyframes bounce_fountainG {\n    0% {\n      -o-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -o-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-ms-keyframes bounce_fountainG {\n    0% {\n      -ms-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -ms-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-webkit-keyframes bounce_fountainG {\n    0% {\n      -webkit-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -webkit-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-moz-keyframes bounce_fountainG {\n    0% {\n      -moz-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -moz-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n`;\n","import ContactItem from \"./ContactItem\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport ContactsListStyled from \"./ContactsListStyle.styled\";\nimport { getFilter } from \"redux/contacts/filterSlice\";\nimport { useEffect, useState } from \"react\";\nimport EditContactModal from \"components/EditContactModal/EditContactModal\";\nimport { useCustomContext } from \"context/userEditContext\";\nimport MainSpinner from \"./MainSpinner\";\nimport { ContactsContainerStyle } from \"./ContactsContainer.styled\";\nimport { GrFormNextLink, GrFormPreviousLink } from \"react-icons/gr\";\nimport ReactPaginate from \"react-paginate\";\nimport { useFetchContactsQuery } from \"../../redux/baseApi\";\nimport { Contact } from \"types\";\n\nconst ContactList = () => {\n  const filter = useAppSelector(getFilter);\n  const context = useCustomContext();\n  const [filteredContacts, setFilteredContacts] = useState<Contact[]>([]);\n  const [currentItems, setCurrentItems] = useState<Contact[]>([]);\n  const [pageCount, setPageCount] = useState(0);\n  const itemsPerPage = 5;\n  const [itemOffset, setItemOffset] = useState(0);\n  const {\n    data: contacts,\n    isLoading: loading,\n    isError: error,\n  } = useFetchContactsQuery();\n\n  useEffect(() => {\n    setFilteredContacts(\n      contacts\n        ? [\n            ...contacts\n              .filter(\n                contact =>\n                  contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n                  contact.number.toLowerCase().includes(filter.toLowerCase())\n              )\n              .sort(({ name: firstName }, { name: secondName }) =>\n                firstName.localeCompare(secondName)\n              ),\n          ]\n        : []\n    );\n  }, [contacts, filter]);\n\n  useEffect(() => {\n    const paginationList = document.querySelector(\n      \".pagination-list\"\n    ) as HTMLElement;\n    const firstPage = paginationList?.firstElementChild\n      .nextSibling as HTMLElement;\n    const endOffset = itemOffset + itemsPerPage;\n\n    if (endOffset === itemsPerPage) {\n      firstPage?.classList.add(\"active\");\n    } else {\n      firstPage?.classList.remove(\"active\");\n    }\n\n    setCurrentItems(filteredContacts?.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(filteredContacts?.length / itemsPerPage));\n\n    if (\n      filteredContacts.length <=\n        Math.ceil(filteredContacts?.length / itemsPerPage) * itemsPerPage &&\n      itemOffset ===\n        Math.ceil(filteredContacts?.length / itemsPerPage) * itemsPerPage\n    ) {\n      setItemOffset(0);\n      firstPage?.classList.add(\"active\");\n    }\n  }, [itemOffset, itemsPerPage, filteredContacts]);\n\n  const handlePageClick = ({ selected }: { selected: number }): void => {\n    const newOffset = (selected * itemsPerPage) % filteredContacts?.length;\n\n    setItemOffset(newOffset);\n  };\n\n  if (error) {\n    return (\n      <ContactsContainerStyle>\n        <h2 className=\"error\">\n          Sorry, something went wrong. Please, try again\n        </h2>\n        ;\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (loading) {\n    return (\n      <ContactsContainerStyle>\n        <MainSpinner />\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (contacts?.length === 0) {\n    return (\n      <ContactsContainerStyle>\n        <h2 className=\"notification\">\n          You haven't any contacts. Please add contacts to your phonebook\n        </h2>\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (filter && filteredContacts.length === 0) {\n    return (\n      <ContactsContainerStyle>\n        <h2 className=\"notification\">\n          We didn't find any contacts according your search\n        </h2>\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (contacts?.length > 0) {\n    return (\n      <ContactsContainerStyle>\n        <ContactsListStyled>\n          {context.isShowModal && <EditContactModal />}\n          {currentItems?.map(contact => (\n            <ContactItem\n              name={contact.name}\n              number={contact.number}\n              id={contact.id}\n              key={contact.id}\n            />\n          ))}\n        </ContactsListStyled>\n        {filteredContacts.length > itemsPerPage && (\n          <ReactPaginate\n            className=\"pagination-list pagination\"\n            nextLabel={<GrFormNextLink size={16} />}\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={3}\n            marginPagesDisplayed={2}\n            pageCount={pageCount}\n            previousLabel={<GrFormPreviousLink size={16} />}\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"...\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        )}\n      </ContactsContainerStyle>\n    );\n  }\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const SearchInputStyle = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: rgba(255, 99, 71, 0.75);\n  border-radius: 12px;\n  border: 1px solid black;\n  margin-top: 8px;\n  h3 {\n    margin-bottom: 10px;\n  }\n\n  input {\n    height: 20px;\n    border-radius: 12px;\n    padding-left: 8px;\n  }\n  .input-container {\n    position: relative;\n    display: inline;\n  }\n\n  .search-icon {\n    position: absolute;\n    right: 8px;\n    top: 50%;\n    transform: translate(0, -50%);\n  }\n`;\n","import { changeFilterValue, getFilter } from \"redux/contacts/filterSlice\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { SearchInputStyle } from \"./SearchinputStyle.styled\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { useAppDispatch } from \"../../redux/hooks\";\n\nconst SearchInput = () => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(getFilter);\n\n  const handleChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(changeFilterValue(value));\n  };\n\n  return (\n    <SearchInputStyle>\n      <h3>Search contact by name or number</h3>\n      <div className=\"input-container\">\n        <AiOutlineSearch className=\"search-icon\" size={16} />\n        <input value={filter} onChange={handleChange} />\n      </div>\n    </SearchInputStyle>\n  );\n};\n\nexport default SearchInput;\n","import { styled } from \"styled-components\";\nimport { Form } from \"formik\";\n\nconst AddContactFormStyle = styled(Form)`\n  max-width: 600px;\n  text-align: center;\n  border: 1px solid black;\n  border-radius: 20px;\n  max-height: 300px;\n  min-height: 200px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  row-gap: 30px;\n  display: flex;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n  background-color: rgba(244, 164, 96, 0.3);\n\n  .first {\n    color: blue;\n  }\n\n  .add-contact-label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: blue;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: blue;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n    width: 140px;\n    height: 40px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: tomato;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n\n  .notify {\n    margin-top: -20px;\n  }\n\n  .notify.ok {\n    color: blue;\n  }\n\n  .notify.error {\n    color: red;\n  }\n`;\n\nexport default AddContactFormStyle;\n","import { useAddContactMutation, useFetchContactsQuery } from \"redux/baseApi\";\nimport { PiSpinnerGap } from \"react-icons/pi\";\nimport AddContactFormStyle from \"./FormStyle.styled\";\nimport { GrAdd } from \"react-icons/gr\";\nimport { toastSuccess, toastError } from \"toastNotification/toastNotification\";\nimport * as yup from \"yup\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { ErrorText } from \"components/ErrorFormText/ErrorFormTextStyle.styled\";\n\ntype InitialValuesType = {\n  name: string;\n  number: string;\n};\n\nconst initialValues: InitialValuesType = {\n  name: \"\",\n  number: \"\",\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, \"Field name must be 3 symbols minimum\")\n    .max(16, \"Field name must be 16 symbols maximum\")\n    .required(\"Field name is required\"),\n\n  number: yup\n    .string()\n    .min(5, \"Field number must be 5 symbols minimum\")\n    .max(16, \"Field number must be 16 symbols minimum\")\n    .required(\"Field number is required\"),\n});\n\nconst AddContactForm = () => {\n  const { data: contacts } = useFetchContactsQuery();\n\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n\n  const handlerSubmitForm = async (\n    { name: addingName, number: addingNumber },\n    { resetForm }\n  ) => {\n    if (\n      contacts.some(\n        ({ name, number }) => name === addingName || number === addingNumber\n      )\n    ) {\n      toastError(\"Sorry, you already have this contact in your book\");\n      return;\n    }\n\n    try {\n      await addContact({ name: addingName, number: addingNumber }).unwrap();\n      toastSuccess(\"Contact has been added to your book\");\n      resetForm();\n    } catch {\n      toastError(\n        \"Oops... Something went wrong =(. Please, reload page and try again\"\n      );\n    }\n\n    // *\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handlerSubmitForm}\n      validationSchema={schema}\n    >\n      <AddContactFormStyle autoComplete=\"off\">\n        <h2>\n          <span className=\"first\">Add </span>contact\n        </h2>\n        <div className=\"add-contact-label-container\">\n          <Field\n            id=\"add-name\"\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label htmlFor=\"add-name\">Name</label>\n        </div>\n        <div className=\"add-contact-label-container\">\n          <Field\n            id=\"add-number\"\n            placeholder=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <label htmlFor=\"add-number\">Phone </label>\n        </div>\n\n        <button type=\"submit\">\n          {isAdding ? (\n            <PiSpinnerGap className=\"spinner\" size={16} />\n          ) : (\n            <GrAdd size={16} />\n          )}\n          Add contact\n        </button>\n        <ErrorMessage\n          name=\"name\"\n          component=\"div\"\n          render={message => <ErrorText>{message}</ErrorText>}\n        />\n        <ErrorMessage\n          name=\"number\"\n          component=\"div\"\n          render={message => <ErrorText>{message}</ErrorText>}\n        />\n      </AddContactFormStyle>\n    </Formik>\n  );\n};\n\nexport default AddContactForm;\n","import styled from \"styled-components\";\n\nexport const ContactsPageStyle = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  text-align: center;\n  .container {\n    max-width: 600px;\n    border: 1px solid black;\n    height: 100vh;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-radius: 8px;\n    background-color: rgba(255, 255, 224);\n    min-height: 100vh;\n    height: 100%;\n\n    .page-link {\n      width: 30px;\n      height: 30px;\n      background-color: tomato;\n      display: block;\n      border-radius: 50%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .pagination {\n      display: flex;\n      column-gap: 10px;\n      justify-content: center;\n      margin-top: 20px;\n    }\n\n    .active .page-link {\n      background-color: blue;\n      color: white;\n    }\n  }\n`;\n","import ContactList from \"../components/FriendsList/ContactsList\";\nimport SearchInput from \"../components/SearchInput/SearchInput\";\nimport AddContactForm from \"../components/AddContactForm/AddContactForm\";\nimport Container from \"components/Container/Container\";\nimport { ContactsPageStyle } from \"./pageStyles/ContactsPageStyle.styled\";\n\nconst ContactsPage = () => {\n  return (\n    <ContactsPageStyle>\n      <Container>\n        <AddContactForm />\n        <SearchInput />\n        <ContactList />\n      </Container>\n    </ContactsPageStyle>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ErrorText","styled","p","_templateObject","_taggedTemplateLiteral","_ref","userId","isCurrentButton","setIsCurrentButton","useState","deleteContact","isLoading","Deleting","useDeleteContactMutation","_jsx","disabled","className","onClick","async","unwrap","toastSuccess","toastError","children","PiSpinnerGap","size","RiDeleteBin6Line","id","name","number","setId","setIsShowModal","setName","setNumber","useCustomContext","handleEditContact","type","FiEdit2","ContactItemStyle","li","_jsxs","href","concat","replace","IoMdCall","EditContactButton","DeleteContactButton","ul","div","EditContactFormStyle","Form","initialValues","schema","yup","shape","min","max","EditContactForm","data","contacts","useFetchContactsQuery","editContact","editing","useEditContactMutation","Formik","onSubmit","editName","editNumber","some","_ref2","sendingName","sendingNumber","validationSchema","autoComplete","Field","placeholder","pattern","htmlFor","PiSpinner","ErrorMessage","component","render","message","modalRoot","document","getElementById","EditContactModal","isShowModal","useEffect","onEsc","e","code","body","style","overflow","paddingOffSet","window","innerWidth","offsetWidth","paddingRight","addEventListener","removeEventListener","createPortal","EditModalStyled","target","currentTarget","AiOutlineCloseCircle","MainSpinner","ContactsContainerStyle","ContactList","filter","useAppSelector","getFilter","context","filteredContacts","setFilteredContacts","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","loading","isError","error","contact","toLowerCase","includes","sort","firstName","secondName","localeCompare","paginationList","querySelector","firstPage","firstElementChild","nextSibling","endOffset","classList","add","remove","slice","Math","ceil","length","handlePageClick","_ref3","selected","newOffset","ContactsListStyled","map","ContactItem","ReactPaginate","nextLabel","GrFormNextLink","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","GrFormPreviousLink","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","SearchInputStyle","SearchInput","dispatch","useAppDispatch","AiOutlineSearch","value","onChange","changeFilterValue","required","AddContactForm","addContact","isAdding","useAddContactMutation","addingName","addingNumber","resetForm","AddContactFormStyle","title","GrAdd","ContactsPageStyle","section","ContactsPage","Container"],"sourceRoot":""}